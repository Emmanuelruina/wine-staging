From 0a88728d7d5f32e64537ae01aba70376dba736fc Mon Sep 17 00:00:00 2001
From: Paul Gofman <pgofman@codeweavers.com>
Date: Thu, 18 May 2023 20:42:05 -0600
Subject: [PATCH] ntdll: Support MEM_REPLACE_PLACEHOLDER in map_view().

---
 dlls/ntdll/unix/virtual.c | 30 ++++++++++++++++++++++++++++++
 1 file changed, 30 insertions(+)

diff --git a/dlls/ntdll/unix/virtual.c b/dlls/ntdll/unix/virtual.c
index 77b0bc4c4c8..bd1a7c41543 100644
--- a/dlls/ntdll/unix/virtual.c
+++ b/dlls/ntdll/unix/virtual.c
@@ -2021,6 +2021,36 @@ static NTSTATUS map_view( struct file_view **view_ret, void *base, size_t size,
     void *ptr;
     NTSTATUS status;
 
+    if (alloc_type & MEM_REPLACE_PLACEHOLDER)
+    {
+        if (!(*view_ret = find_view( base, 0 )))
+        {
+            TRACE( "MEM_REPLACE_PLACEHOLDER view not found.\n" );
+            return STATUS_INVALID_PARAMETER;
+        }
+        TRACE( "found view %p, size %p, protect %#x.\n",
+              (*view_ret)->base, (void *)(*view_ret)->size, (*view_ret)->protect );
+
+        if ((*view_ret)->base != base || (*view_ret)->size != size)
+        {
+            WARN( "Wrond range.\n" );
+            return STATUS_CONFLICTING_ADDRESSES;
+        }
+
+        if (!((*view_ret)->protect & VPROT_FREE_PLACEHOLDER))
+        {
+            TRACE( "Wrong protect %#x for MEM_REPLACE_PLACEHOLDER.\n", (*view_ret)->protect );
+            return STATUS_INVALID_PARAMETER;
+        }
+        (*view_ret)->protect = vprot | VPROT_PLACEHOLDER;
+
+        if (!set_vprot( *view_ret, base, size, vprot ))
+            ERR( "set_protection failed.\n" );
+        if (vprot & VPROT_WRITEWATCH)
+            reset_write_watches( base, size );
+        return STATUS_SUCCESS;
+    }
+
     if (base)
     {
         if (is_beyond_limit( base, size, address_space_limit ))
-- 
2.40.1

