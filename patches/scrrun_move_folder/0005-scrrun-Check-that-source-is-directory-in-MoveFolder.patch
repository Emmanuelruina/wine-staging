From e7ce13576f0ef1b73622a32568fce45eda879613 Mon Sep 17 00:00:00 2001
From: Robert Wilhelm <robert.wilhelm@gmx.net>
Date: Wed, 29 Jun 2022 16:29:55 +0200
Subject: [PATCH] scrrun: Check that source is directory in MoveFolder().

Signed-off-by: Robert Wilhelm <robert.wilhelm@gmx.net>
---
 dlls/scrrun/filesystem.c       | 10 +++++++++-
 dlls/scrrun/tests/filesystem.c | 14 ++++++++++++++
 2 files changed, 23 insertions(+), 1 deletion(-)

diff --git a/dlls/scrrun/filesystem.c b/dlls/scrrun/filesystem.c
index 5c4b13d48b8..72a15aae545 100644
--- a/dlls/scrrun/filesystem.c
+++ b/dlls/scrrun/filesystem.c
@@ -3806,6 +3806,7 @@ static HRESULT WINAPI filesys_MoveFile(IFileSystem3 *iface, BSTR source, BSTR de
 static inline HRESULT create_movefolder_error(DWORD err)
 {
     switch(err) {
+    case ERROR_INVALID_NAME:
     case ERROR_FILE_NOT_FOUND:
     case ERROR_PATH_NOT_FOUND: return CTL_E_PATHNOTFOUND;
     case ERROR_ACCESS_DENIED: return CTL_E_PERMISSIONDENIED;
@@ -3819,12 +3820,19 @@ static inline HRESULT create_movefolder_error(DWORD err)
 
 static HRESULT WINAPI filesys_MoveFolder(IFileSystem3 *iface, BSTR source, BSTR destination)
 {
+    int len;
+    WCHAR src_path[MAX_PATH];
+
     TRACE("%p %s %s\n", iface, debugstr_w(source), debugstr_w(destination));
 
     if(!source || !source[0] || !destination || !destination[0])
         return E_INVALIDARG;
 
-    return MoveFileW(source, destination) ? S_OK : create_movefolder_error(GetLastError());
+    len = SysStringLen(source);
+    lstrcpyW(src_path, source);
+    if (source[len-1] != '\\' && source[len-1] != '/') wcscat(src_path, L"\\");
+
+    return MoveFileW(src_path, destination) ? S_OK : create_movefolder_error(GetLastError());
 }
 
 static inline HRESULT copy_file(const WCHAR *source, DWORD source_len,
diff --git a/dlls/scrrun/tests/filesystem.c b/dlls/scrrun/tests/filesystem.c
index 9b352797073..0236a02aa74 100644
--- a/dlls/scrrun/tests/filesystem.c
+++ b/dlls/scrrun/tests/filesystem.c
@@ -2644,6 +2644,7 @@ static void test_MoveFolder(void)
     BSTR src, dst, str, empty;
     WCHAR buffW1[MAX_PATH],buffW2[MAX_PATH];
     HRESULT hr;
+    HANDLE file;
 
     get_temp_path(L"foo", buffW1);
     get_temp_path(L"bar", buffW2);
@@ -2687,6 +2688,19 @@ static void test_MoveFolder(void)
     ok(hr == CTL_E_PATHNOTFOUND, "Unexpected hr %#lx.\n", hr);
     SysFreeString(src);
     SysFreeString(dst);
+
+    file = CreateFileW(buffW1, GENERIC_WRITE, 0, NULL, CREATE_ALWAYS,
+                       FILE_ATTRIBUTE_NORMAL, NULL);
+    ok(file != INVALID_HANDLE_VALUE, "CreateFile failed\n");
+    CloseHandle(file);
+
+    src = SysAllocString(buffW1);
+    dst = SysAllocString(buffW2);
+    hr = IFileSystem3_MoveFolder(fs3, src, dst); /* src is regular file */
+    ok(hr == CTL_E_PATHNOTFOUND, "Unexpected hr %#lx.\n", hr);
+    SysFreeString(src);
+    SysFreeString(dst);
+    DeleteFileW(buffW1);
 }
 
 static void test_DoOpenPipeStream(void)
-- 
2.43.0

