From 30c175a9e90bc7889f97ad54ae82a34a832650dc Mon Sep 17 00:00:00 2001
From: Robert Wilhelm <robert.wilhelm@gmx.net>
Date: Wed, 29 Jun 2022 17:21:10 +0200
Subject: [PATCH] scrrun: Move source dir into destination dir if destination
 ends with separator in MoveFolder().

Signed-off-by: Robert Wilhelm <robert.wilhelm@gmx.net>
---
 dlls/scrrun/filesystem.c       | 22 +++++++++++++++-----
 dlls/scrrun/tests/filesystem.c | 38 +++++++++++++++++++++++++++++++++-
 2 files changed, 54 insertions(+), 6 deletions(-)

diff --git a/dlls/scrrun/filesystem.c b/dlls/scrrun/filesystem.c
index 72a15aae545..2c364ec6e08 100644
--- a/dlls/scrrun/filesystem.c
+++ b/dlls/scrrun/filesystem.c
@@ -3820,18 +3820,30 @@ static inline HRESULT create_movefolder_error(DWORD err)
 
 static HRESULT WINAPI filesys_MoveFolder(IFileSystem3 *iface, BSTR source, BSTR destination)
 {
-    int len;
-    WCHAR src_path[MAX_PATH];
+    int src_len, dst_len;
+    WCHAR src_path[MAX_PATH], dst_path[MAX_PATH];
+    WCHAR *filename;
 
     TRACE("%p %s %s\n", iface, debugstr_w(source), debugstr_w(destination));
 
     if(!source || !source[0] || !destination || !destination[0])
         return E_INVALIDARG;
 
-    len = SysStringLen(source);
-    lstrcpyW(src_path, source);
-    if (source[len-1] != '\\' && source[len-1] != '/') wcscat(src_path, L"\\");
+    if (!GetFullPathNameW(source, MAX_PATH, src_path, &filename))
+        return E_FAIL;
 
+    src_len = SysStringLen(src_path);
+    if (src_path[src_len-1] != '\\' && src_path[src_len-1] != '/')
+        wcscat(src_path, L"\\");
+
+    dst_len = lstrlenW(destination);
+    if (destination[dst_len-1] == '\\' || destination[dst_len-1] == '/') {
+        lstrcpyW(dst_path, destination);
+        lstrcatW(dst_path, filename);
+        TRACE("move %s to %s\n",  debugstr_w(src_path), debugstr_w(dst_path));
+        return MoveFileW(src_path, dst_path) ? S_OK : create_movefolder_error(GetLastError());
+    }
+    TRACE("move %s to %s\n",  debugstr_w(src_path), debugstr_w(destination));
     return MoveFileW(src_path, destination) ? S_OK : create_movefolder_error(GetLastError());
 }
 
diff --git a/dlls/scrrun/tests/filesystem.c b/dlls/scrrun/tests/filesystem.c
index 0236a02aa74..d237e21e9a6 100644
--- a/dlls/scrrun/tests/filesystem.c
+++ b/dlls/scrrun/tests/filesystem.c
@@ -2642,7 +2642,7 @@ static void test_MoveFile(void)
 static void test_MoveFolder(void)
 {
     BSTR src, dst, str, empty;
-    WCHAR buffW1[MAX_PATH],buffW2[MAX_PATH];
+    WCHAR buffW1[MAX_PATH],buffW2[MAX_PATH],pathW[MAX_PATH];
     HRESULT hr;
     HANDLE file;
 
@@ -2701,6 +2701,42 @@ static void test_MoveFolder(void)
     SysFreeString(src);
     SysFreeString(dst);
     DeleteFileW(buffW1);
+
+    GetTempPathW(MAX_PATH, buffW1);
+    lstrcatW(buffW1,L"foo");
+    GetTempPathW(MAX_PATH, buffW2);
+    lstrcatW(buffW2,L"bar");
+    ok(CreateDirectoryW(buffW1, NULL), "CreateDirectory(%s) failed\n", wine_dbgstr_w(buffW1));
+    ok(CreateDirectoryW(buffW2, NULL), "CreateDirectory(%s) failed\n", wine_dbgstr_w(buffW2));
+    lstrcpyW(pathW,buffW2);
+    lstrcatW(pathW,L"\\");
+    src = SysAllocString(buffW1);
+    dst = SysAllocString(pathW);
+    hr = IFileSystem3_MoveFolder(fs3, src, dst);
+    ok(hr == S_OK, "Unexpected hr %#lx.\n", hr);
+    SysFreeString(src);
+    SysFreeString(dst);
+    lstrcatW(pathW,L"foo");
+    ok(RemoveDirectoryW(pathW), "can't remove %s directory\n", wine_dbgstr_w(pathW));
+    ok(RemoveDirectoryW(buffW2), "can't remove %s directory\n", wine_dbgstr_w(buffW2));
+
+    GetTempPathW(MAX_PATH, buffW1);
+    lstrcatW(buffW1,L"foo");
+    GetTempPathW(MAX_PATH, buffW2);
+    lstrcatW(buffW2,L"bar");
+    ok(CreateDirectoryW(buffW1, NULL), "CreateDirectory(%s) failed\n", wine_dbgstr_w(buffW1));
+    ok(CreateDirectoryW(buffW2, NULL), "CreateDirectory(%s) failed\n", wine_dbgstr_w(buffW2));
+    lstrcpyW(pathW,buffW2);
+    lstrcatW(pathW,L"/");
+    src = SysAllocString(buffW1);
+    dst = SysAllocString(pathW);
+    hr = IFileSystem3_MoveFolder(fs3, src, dst);
+    ok(hr == S_OK, "Unexpected hr %#lx.\n", hr);
+    SysFreeString(src);
+    SysFreeString(dst);
+    lstrcatW(pathW,L"foo");
+    ok(RemoveDirectoryW(pathW), "can't remove %s directory\n", wine_dbgstr_w(pathW));
+    ok(RemoveDirectoryW(buffW2), "can't remove %s directory\n", wine_dbgstr_w(buffW2));
 }
 
 static void test_DoOpenPipeStream(void)
-- 
2.43.0

