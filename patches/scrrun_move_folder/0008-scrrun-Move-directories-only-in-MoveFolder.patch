From 58989b73e856ab5c757991fc61e4690afc70c59d Mon Sep 17 00:00:00 2001
From: Robert Wilhelm <robert.wilhelm@gmx.net>
Date: Mon, 18 Jul 2022 11:53:08 +0200
Subject: [PATCH] scrrun: Move directories only in MoveFolder().

Signed-off-by: Robert Wilhelm <robert.wilhelm@gmx.net>
---
 dlls/scrrun/filesystem.c       |  8 ++++++--
 dlls/scrrun/tests/filesystem.c | 10 +++++++++-
 2 files changed, 15 insertions(+), 3 deletions(-)

diff --git a/dlls/scrrun/filesystem.c b/dlls/scrrun/filesystem.c
index 749a06739c7..79cd3439ea2 100644
--- a/dlls/scrrun/filesystem.c
+++ b/dlls/scrrun/filesystem.c
@@ -3860,14 +3860,18 @@ static HRESULT WINAPI filesys_MoveFolder(IFileSystem3 *iface, BSTR source, BSTR
 
     do {
         name_len = lstrlenW(ffd.cFileName);
-        if(src_len+name_len+1 >= MAX_PATH || dst_len+name_len+1 >= MAX_PATH) {
+        if(src_len+name_len+2 >= MAX_PATH || dst_len+name_len+1 >= MAX_PATH) {
             FindClose(f);
             return E_FAIL;
         }
         memcpy(filename, ffd.cFileName, (name_len+1)*sizeof(WCHAR));
+        wcscat(filename, L"\\");
         memcpy(dst_path + dst_len, ffd.cFileName, (name_len+1)*sizeof(WCHAR));
         TRACE("move %s to %s\n",  debugstr_w(src_path), debugstr_w(dst_path));
-        if (!MoveFileW(src_path, dst_path)) return create_error(GetLastError());
+        if (!MoveFileW(src_path, dst_path)) {
+            if (GetLastError() == ERROR_INVALID_NAME) continue;
+            return create_movefolder_error(GetLastError());
+        }
     } while(FindNextFileW(f, &ffd));
     FindClose(f);
 
diff --git a/dlls/scrrun/tests/filesystem.c b/dlls/scrrun/tests/filesystem.c
index 4f5f1b0a7b8..1d6e7da921b 100644
--- a/dlls/scrrun/tests/filesystem.c
+++ b/dlls/scrrun/tests/filesystem.c
@@ -2642,7 +2642,7 @@ static void test_MoveFile(void)
 static void test_MoveFolder(void)
 {
     BSTR src, dst, str, empty;
-    WCHAR buffW1[MAX_PATH], buffW2[MAX_PATH], pathW[MAX_PATH], srcW[MAX_PATH];
+    WCHAR buffW1[MAX_PATH], buffW2[MAX_PATH], buffW3[MAX_PATH], pathW[MAX_PATH], srcW[MAX_PATH];
     HRESULT hr;
     HANDLE file;
 
@@ -2742,6 +2742,8 @@ static void test_MoveFolder(void)
     lstrcatW(buffW1,L"foo1");
     GetTempPathW(MAX_PATH, buffW2);
     lstrcatW(buffW2,L"foo2");
+    GetTempPathW(MAX_PATH, buffW3);
+    lstrcatW(buffW3,L"foo3");
     GetTempPathW(MAX_PATH, srcW);
     lstrcatW(srcW,L"foo?");
     GetTempPathW(MAX_PATH, pathW);
@@ -2749,6 +2751,11 @@ static void test_MoveFolder(void)
     ok(CreateDirectoryW(buffW1, NULL), "CreateDirectory(%s) failed\n", wine_dbgstr_w(buffW1));
     ok(CreateDirectoryW(buffW2, NULL), "CreateDirectory(%s) failed\n", wine_dbgstr_w(buffW2));
     ok(CreateDirectoryW(pathW, NULL), "CreateDirectory(%s) failed\n", wine_dbgstr_w(pathW));
+    /* create a file, should not be moved by MoveFolder() */
+    file = CreateFileW(buffW3, GENERIC_WRITE, 0, NULL, CREATE_ALWAYS,
+                       FILE_ATTRIBUTE_NORMAL, NULL);
+    ok(file != INVALID_HANDLE_VALUE, "CreateFile failed\n");
+    CloseHandle(file);
     src = SysAllocString(srcW);
     dst = SysAllocString(pathW);
     hr = IFileSystem3_MoveFolder(fs3, src, dst);
@@ -2762,6 +2769,7 @@ static void test_MoveFolder(void)
     ok(RemoveDirectoryW(buffW1), "can't remove %s directory\n", wine_dbgstr_w(buffW1));
     ok(RemoveDirectoryW(buffW2), "can't remove %s directory\n", wine_dbgstr_w(buffW2));
     ok(RemoveDirectoryW(pathW), "can't remove %s directory\n", wine_dbgstr_w(pathW));
+    ok(DeleteFileW(buffW3), "can't remove %s\n", wine_dbgstr_w(buffW3));
 }
 
 static void test_DoOpenPipeStream(void)
-- 
2.43.0

